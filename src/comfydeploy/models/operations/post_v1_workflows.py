"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from comfydeploy.models.components import httpmetadata as components_httpmetadata
from comfydeploy.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class WorkflowJSONTypedDict(TypedDict):
    pass
    

class WorkflowJSON(BaseModel):
    pass
    

class PostV1WorkflowsRequestBodyTypedDict(TypedDict):
    workflow_name: NotRequired[str]
    workflow_json: NotRequired[WorkflowJSONTypedDict]
    create_machine: NotRequired[bool]
    

class PostV1WorkflowsRequestBody(BaseModel):
    workflow_name: Optional[str] = "new workflow"
    workflow_json: Optional[WorkflowJSON] = None
    create_machine: Optional[bool] = True
    

class PostV1WorkflowsResponseBodyTypedDict(TypedDict):
    r"""Workflow created successfully"""
    
    workflow_id: str
    workflow_version: float
    machine_id: NotRequired[str]
    

class PostV1WorkflowsResponseBody(BaseModel):
    r"""Workflow created successfully"""
    
    workflow_id: str
    workflow_version: float
    machine_id: Optional[str] = None
    

class PostV1WorkflowsResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    object: NotRequired[PostV1WorkflowsResponseBodyTypedDict]
    r"""Workflow created successfully"""
    

class PostV1WorkflowsResponse(BaseModel):
    http_meta: Annotated[Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)] = None
    object: Optional[PostV1WorkflowsResponseBody] = None
    r"""Workflow created successfully"""
    
