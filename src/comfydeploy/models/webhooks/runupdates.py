"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from comfydeploy.models.components import httpmetadata as components_httpmetadata
from comfydeploy.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class RunUpdatesResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    

class RunUpdatesResponse(BaseModel):
    http_meta: Annotated[Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)] = None
    

class Status(str, Enum):
    NOT_STARTED = "not-started"
    RUNNING = "running"
    UPLOADING = "uploading"
    SUCCESS = "success"
    FAILED = "failed"
    STARTED = "started"
    QUEUED = "queued"
    TIMEOUT = "timeout"
    CANCELLED = "cancelled"

class ImagesTypedDict(TypedDict):
    url: str
    filename: str
    

class Images(BaseModel):
    url: str
    filename: str
    

class FilesTypedDict(TypedDict):
    url: str
    filename: str
    

class Files(BaseModel):
    url: str
    filename: str
    

class GifsTypedDict(TypedDict):
    url: str
    filename: str
    

class Gifs(BaseModel):
    url: str
    filename: str
    

class DataTypedDict(TypedDict):
    images: NotRequired[List[ImagesTypedDict]]
    files: NotRequired[List[FilesTypedDict]]
    gifs: NotRequired[List[GifsTypedDict]]
    text: NotRequired[List[str]]
    

class Data(BaseModel):
    images: Optional[List[Images]] = None
    files: Optional[List[Files]] = None
    gifs: Optional[List[Gifs]] = None
    text: Optional[List[str]] = None
    

class OutputsTypedDict(TypedDict):
    data: DataTypedDict
    

class Outputs(BaseModel):
    data: Data
    

class RunUpdatesRequestBodyTypedDict(TypedDict):
    status: Status
    live_status: str
    progress: float
    run_id: str
    outputs: List[OutputsTypedDict]
    

class RunUpdatesRequestBody(BaseModel):
    status: Status
    live_status: str
    progress: float
    run_id: str
    outputs: List[Outputs]
    
