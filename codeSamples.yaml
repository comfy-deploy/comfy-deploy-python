overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/upload-url"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "url"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.files.get_upload_url(type=operations.Type.APPLICATION_OCTET_STREAM, file_size='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/websocket/{deployment_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/websocket/{deployment_id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.get_websocket_deployment_id_(deployment_id='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/workflows/{workflow_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/v1/workflows/{workflow_id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.get_v1_workflows_workflow_id_(workflow_id='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/workflows/{workflow_id}/outputs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/v1/workflows/{workflow_id}/outputs"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.get_v1_workflows_workflow_id_outputs(request=operations.GetV1WorkflowsWorkflowIDOutputsRequest(
                workflow_id='<value>',
            ))

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/gpu_event"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "post_/gpu_event"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.machines.post_gpu_event(request=operations.PostGpuEventRequestBody(
                machine_id='<value>',
                timestamp='<value>',
                event_type=operations.EventType.GPU_END,
                gpu_provider=operations.GpuProvider.MODAL,
            ))

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/machines"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "post_/v1/machines"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.machines.post_v1_machines(request=operations.PostV1MachinesRequestBody())

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/machines/{machine_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/v1/machines/{machine_id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.machines.get_v1_machines_machine_id_(machine_id='<value>', ext_urls='false')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/machine-endpoint"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "endpoint"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.post_machine_endpoint(request=operations.PostMachineEndpointRequestBody(
                machine_id='<value>',
                type='<value>',
            ))

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/workflows"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "post_/v1/workflows"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.post_v1_workflows(request=operations.PostV1WorkflowsRequestBody())

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/workflow-version/{version_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "version/{version_id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.get_workflow_version_version_id_(version_id='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/workflow/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/workflow/{id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.get_workflow_id_(id='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/machines"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/v1/machines"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.machines.get_v1_machines(page='1', page_size='12', fields=operations.Fields.MINIMAL)

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/workflows"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/v1/workflows"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.workflows.get_v1_workflows(page='1', page_size='12', search='<value>')

            if res.response_bodies is not None:
                # handle response
                pass
  - target: $["paths"]["/deployment/{id}/inputs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/deployment/{id}/inputs"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.get_deployment_id_inputs(id='<value>')

            if res.response_bodies is not None:
                # handle response
                pass
  - target: $["paths"]["/run"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/run"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.run.get(run_id='<value>')

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/run"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "post_/run"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.run.create(request=operations.PostRunRequestBody(
                deployment_id='d290f1ee-6c54-4b01-90e6-d701748f0851',
                workflow_id='f47ac10b-58cc-4372-a567-0e02b2c3d479',
                inputs={
                    'input_text': 'value1',
                    'input_url': 'https://example.png',
                },
                webhook='https://example.com/webhook',
            ))

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/auth-response/{request_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "response/{request_id}"
          "source": |-
            import comfydeploy

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.get_auth_response_request_id_(request_id='<value>')

            if res.two_hundred_application_json_object is not None:
                # handle response
                pass
  - target: $["paths"]["/workflow"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "post_/workflow"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.post_workflow(request=operations.PostWorkflowRequestBody(
                workflow_api={
                    'key': operations.WorkflowAPI(
                        inputs={
                            'key': '<value>',
                        },
                    ),
                },
                snapshot=operations.Snapshot(
                    comfyui='<value>',
                    git_custom_nodes={
                        'key': operations.GitCustomNodes(
                            hash='<value>',
                            disabled=False,
                        ),
                    },
                    file_custom_nodes=[
                        '<value>',
                    ],
                ),
            ))

            if res.object is not None:
                # handle response
                pass
  - target: $["paths"]["/deployment"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "get_/deployment"
          "source": |-
            import comfydeploy
            from comfydeploy.models import operations

            s = comfydeploy.ComfyDeploy(
                bearer_auth="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.comfyui.get_deployment(environment=operations.Environment.STAGING)

            if res.response_bodies is not None:
                # handle response
                pass
