"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from comfydeploy.types import BaseModel, Nullable, UNSET_SENTINEL
from datetime import datetime
from pydantic import model_serializer
from typing_extensions import TypedDict


class SessionTypedDict(TypedDict):
    session_id: str
    gpu_event_id: str
    url: Nullable[str]
    gpu: str
    created_at: datetime
    timeout: Nullable[int]
    timeout_end: Nullable[datetime]
    machine_id: Nullable[str]
    machine_version_id: Nullable[str]


class Session(BaseModel):
    session_id: str

    gpu_event_id: str

    url: Nullable[str]

    gpu: str

    created_at: datetime

    timeout: Nullable[int]

    timeout_end: Nullable[datetime]

    machine_id: Nullable[str]

    machine_version_id: Nullable[str]

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = [
            "url",
            "timeout",
            "timeout_end",
            "machine_id",
            "machine_version_id",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
