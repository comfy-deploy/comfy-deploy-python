"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from comfydeploy.models.components import httpmetadata as components_httpmetadata
from comfydeploy.types import BaseModel
from comfydeploy.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
import pydantic
from typing import Any, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Fields(str, Enum):
    FULL = "full"
    MINIMAL = "minimal"

class GetV1MachinesRequestTypedDict(TypedDict):
    page: NotRequired[str]
    page_size: NotRequired[str]
    fields: NotRequired[Fields]
    

class GetV1MachinesRequest(BaseModel):
    page: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = "1"
    page_size: Annotated[Optional[str], pydantic.Field(alias="pageSize"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = "12"
    fields: Annotated[Optional[Fields], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = Fields.MINIMAL
    

class MachinesTypedDict(TypedDict):
    id: str
    endpoints: List[str]
    name: NotRequired[str]
    type: NotRequired[str]
    status: NotRequired[str]
    created_at: NotRequired[str]
    updated_at: NotRequired[str]
    object_info: NotRequired[Any]
    

class Machines(BaseModel):
    id: str
    endpoints: List[str]
    name: Optional[str] = None
    type: Optional[str] = None
    status: Optional[str] = None
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    object_info: Optional[Any] = None
    

class GetV1MachinesResponseBodyTypedDict(TypedDict):
    r"""Machines retrieved successfully"""
    
    machines: List[MachinesTypedDict]
    total: float
    

class GetV1MachinesResponseBody(BaseModel):
    r"""Machines retrieved successfully"""
    
    machines: List[Machines]
    total: float
    

class GetV1MachinesResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    object: NotRequired[GetV1MachinesResponseBodyTypedDict]
    r"""Machines retrieved successfully"""
    

class GetV1MachinesResponse(BaseModel):
    http_meta: Annotated[Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)] = None
    object: Optional[GetV1MachinesResponseBody] = None
    r"""Machines retrieved successfully"""
    
